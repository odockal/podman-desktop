{
  "name": "podman",
  "displayName": "Podman",
  "description": "Integration for Podman and Podman Machines",
  "version": "0.0.1",
  "icon": "icon.png",
  "publisher": "podman-desktop",
  "license": "Apache-2.0",
  "engines": {
    "podman-desktop": "^0.0.1"
  },
  "main": "./dist/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "podman.info",
        "title": "podman: Specific info about podman"
      },
      {
        "command": "podman.onboarding.checkPodmanInstalled",
        "title": "podman: Check podman installation"
      },
      {
        "command": "podman.onboarding.checkPodmanRequirements",
        "title": "podman: Check system requirements to install podman"
      },
      {
        "command": "podman.onboarding.installPodman",
        "title": "podman: Install podman"
      }
    ],
    "configuration": {
      "title": "Podman",
      "properties": {
        "podman.binary.path": {
          "type": "string",
          "format": "file",
          "default": "",
          "description": "Custom path to Podman binary (Default is blank)"
        },
        "podman.machine.cpus": {
          "type": "number",
          "format": "cpu",
          "minimum": 1,
          "default": 2,
          "scope": "ContainerConnection",
          "description": "CPU(s)"
        },
        "podman.machine.memory": {
          "type": "number",
          "format": "memory",
          "minimum": 1000000000,
          "default": 4000000000,
          "scope": "ContainerConnection",
          "description": "Memory"
        },
        "podman.machine.diskSize": {
          "type": "number",
          "format": "diskSize",
          "default": 100000000000,
          "scope": "ContainerConnection",
          "description": "Disk size"
        },
        "podman.factory.machine.name": {
          "type": "string",
          "default": "podman-machine-default",
          "scope": "ContainerProviderConnectionFactory",
          "description": "Name"
        },
        "podman.factory.machine.cpus": {
          "type": "number",
          "format": "cpu",
          "default": 2,
          "minimum": 1,
          "maximum": "HOST_TOTAL_CPU",
          "scope": "ContainerProviderConnectionFactory",
          "description": "CPU(s)"
        },
        "podman.factory.machine.memory": {
          "type": "number",
          "format": "memory",
          "minimum": 1000000000,
          "default": 4000000000,
          "maximum": "HOST_TOTAL_MEMORY",
          "scope": "ContainerProviderConnectionFactory",
          "description": "Memory"
        },
        "podman.factory.machine.diskSize": {
          "type": "number",
          "format": "diskSize",
          "default": 100000000000,
          "minimum": 10000000000,
          "maximum": "HOST_TOTAL_DISKSIZE",
          "scope": "ContainerProviderConnectionFactory",
          "description": "Disk size"
        },
        "podman.factory.machine.image-path": {
          "type": "string",
          "format": "file",
          "scope": "ContainerProviderConnectionFactory",
          "description": "Image Path (Optional)"
        },
        "podman.factory.machine.rootful": {
          "type": "boolean",
          "default": true,
          "scope": "ContainerProviderConnectionFactory",
          "description": "Machine with root privileges"
        }
      }
    },
    "onboarding": {
      "title": "Podman Setup",
      "steps": [
        {
          "id": "checkPodmanInstalled",
          "label": "Check Podman",
          "title": "Checking for Podman installation",
          "command": "podman.onboarding.checkPodmanInstalled",
          "completionEvents": [
            "onCommand:podman.onboarding.checkPodmanInstalled"
          ]
        },
        {
          "id": "startPodmanInstallation",
          "label": "Start Setup",
          "title": "We could not find Podman. Let's install it!",
          "when": "onboardingContext:podmanIsNotInstalled == true"
        },
        {
          "id": "checkPodmanRequirements",
          "label": "Check System",
          "title": "Checking for system requirements to install Podman",
          "when": "onboardingContext:podmanIsNotInstalled == true",
          "command": "podman.onboarding.checkPodmanRequirements",
          "completionEvents": [
            "onCommand:podman.onboarding.checkPodmanRequirements"
          ]
        },
        {
          "id": "missingRequirementView",
          "label": "Fix System",
          "title": "Some system requirements are missing",
          "when": "onboardingContext:requirementsStatus == failed && onboardingContext:podmanIsNotInstalled == true",
          "completionEvents": [
            "onboardingContext:requirementsStatus == ok"
          ],
          "content": [
            [
              {
                "value": "${onboardingContext:warningsMarkdown}",
                "highlight": true
              }
            ],
            [
              {
                "value": "When possible, we've provided information on how to address these requirements."
              }
            ],
            [
              {
                "label": "Check requirements again",
                "command": "podman.onboarding.checkPodmanRequirements",
                "component": "button"
              }
            ]
          ]
        },
        {
          "id": "installPodmanView",
          "label": "Install Podman",
          "title": "Installing Podman",
          "description": "Once installed, we will enable and configure the extension",
          "when": "onboardingContext:podmanIsNotInstalled == true",
          "command": "podman.onboarding.installPodman",
          "completionEvents": [
            "onCommand:podman.onboarding.installPodman"
          ]
        },
        {
          "id": "podmanFailedInstallation",
          "label": "Done",
          "title": "Failed installing Podman",
          "when": "onboardingContext:podmanIsNotInstalled == true"
        },
        {
          "id": "podmanInstalled",
          "label": "Done",
          "title": "Podman successfully installed",
          "when": "onboardingContext:podmanIsNotInstalled == false"
        }
      ]
    }
  },
  "scripts": {
    "build": "rollup --bundleConfigAsCjs --config rollup.config.js --compact --environment BUILD:production && npx ts-node ./scripts/download.ts  && node ./scripts/build.js",
    "watch": "rollup --bundleConfigAsCjs --config rollup.config.js -w",
    "test": "vitest run --coverage",
    "test:watch": "vitest watch --coverage"
  },
  "dependencies": {
    "@ltd/j-toml": "^1.38.0",
    "@podman-desktop/api": "^0.0.1",
    "compare-versions": "^6.0.0",
    "sudo-prompt": "^9.2.1"
  },
  "devDependencies": {
    "7zip-min": "^1.4.4",
    "hasha": "^5.2.2",
    "mkdirp": "^3.0.1",
    "octokit": "^3.1.0",
    "ts-node": "^10.9.1",
    "vitest": "^0.34.1",
    "zip-local": "^0.3.5"
  }
}
